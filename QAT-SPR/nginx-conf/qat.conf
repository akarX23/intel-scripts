user root;
#worker_priority -1Â·0;
worker_processes 16;
worker_cpu_affinity auto;
worker_rlimit_nofile 1000000;
#error_log logs/error.log error;
master_process on;

load_module modules/ngx_ssl_engine_qat_module.so;

events {
    use epoll;
    worker_connections 9999;
    accept_mutex off;
    multi_accept off;
}

ssl_engine {
    use_engine qatengine;
    default_algorithms RSA,EC,DH,DSA;
    qat_engine {
        qat_offload_mode async;
        qat_notify_mode poll;
        qat_poll_mode heuristic;
#        qat_sw_fallback on;
    }
}

http {
    access_log off;
    sendfile on;
    keepalive_requests 1000;

    server {
        listen       80;
        server_name  localhost;

        location /100KB {
            alias /path-to-workloads-dir/workloads/100KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /256KB {
            alias /path-to-workloads-dir/workloads/256KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /750KB {
            alias /path-to-workloads-dir/workloads/750KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /1MB {
            alias /path-to-workloads-dir/workloads/1MB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /5MB {
            alias /path-to-workloads-dir/workloads/5MB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       443 ssl asynch backlog=131072 deferred so_keepalive=on;
        server_name  localhost;

        keepalive_requests  0;
        keepalive_timeout  0s;
        tcp_nopush on;
        tcp_nodelay on;

        lingering_close off;
        lingering_time 1;

        ssl_session_cache   off;
        #ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_session_tickets off;

        ssl_protocols       TLSv1.2;
        ssl_certificate      /path-to-certs-dir/certs/cert.pem;
        ssl_certificate_key  /path-to-certs-dir/certs/cert.key;

        #ssl_verify_client on;
        ssl_verify_client off;
        #ssl_prefer_server_ciphers   on;

        location /100KB {
            alias /path-to-workloads-dir/workloads/100KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }


        location /256KB {
            alias /path-to-workloads-dir/workloads/256KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /750KB {
            alias /path-to-workloads-dir/workloads/750KB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }


        location /1MB {
            alias /path-to-workloads-dir/workloads/1MB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /5MB {
            alias /path-to-workloads-dir/workloads/5MB;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
            proxy_cache_key $uri;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

    }

}
